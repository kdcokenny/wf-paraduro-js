{"mappings":"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","sources":["src/js/chartjs/dashboard.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.js","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/@kurkle/color/dist/color.esm.js"],"sourcesContent":["import { Chart } from 'chart.js/auto';\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n    const ctx = document.getElementById('myChart');\n\n    if (ctx) {\n        new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n                datasets: [{\n                    label: '# of Votes',\n                    data: [12, 19, 3, 5, 2, 3],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scales: {\n                    y: {\n                        beginAtZero: true\n                    }\n                }\n            }\n        });\n    }\n});\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n"],"names":["$2RVy2","parcelRequire","document","addEventListener","event","ctx","getElementById","Chart","type","data","labels","datasets","label","borderWidth","options","scales","y","beginAtZero","register","registerables","Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","$216d2bdc6f281bf6$export$a424a0aa8f687495","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","animator","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","r","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","inflateAmount","ratio","DoughnutController","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","_scriptable","name","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","getDataVisibility","onClick","e","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","formatNumber","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","grid","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","obj","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","skipNull","val","indexOf","_getStackCount","_getStackIndex","name1","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","points","point","iPixel","vPixel","skip","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","_fullLoop","pointPosition","getPointPositionForValue","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","init","formats","format","diff","startOf","endOf","$216d2bdc6f281bf6$export$f32766ea09ec8bc4","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","$216d2bdc6f281bf6$export$a13296960cae0384","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","$216d2bdc6f281bf6$export$1ecca0613f5e56d2","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","_toLeftRightCenter","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","$216d2bdc6f281bf6$export$4bb7493d241fd8a5","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","_isDomSupported","instances","getChart","c","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","outer","skipX","skipY","_isBetween","addNormalRectPath","rect","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","$216d2bdc6f281bf6$export$c537fa0d021d010b","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","$216d2bdc6f281bf6$export$be17f937e9aa7533","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","$216d2bdc6f281bf6$export$d19ba4d812bed757","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","$216d2bdc6f281bf6$export$ed247974535929c7","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","$216d2bdc6f281bf6$export$f99233281efd08a0","titleBlock","createTitle","WeakMap","$216d2bdc6f281bf6$export$d5c56664638992a4","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$216d2bdc6f281bf6$export$28c660c63b792dea","afterInit","afterDraw","_fallback","addIfString","addedLabels","_getLabelForValue","relativeLabelSize","minSpacing","rad","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","generateTicks","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","lastIndexOf","findOrAddLabel","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","keyResolvers","tmp","part","_splitKey","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","intlCache","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","$8d27ca75da600b9c$export$91477dc880baac21","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","$8d27ca75da600b9c$export$4368d992c4eafac0","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","drawBackdrop","strokeText","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parseInt","toFontString","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","borderBox","paddings","borders","touches","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","getPropertyValue","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","$87e6acd7396d97dc$export$2077e0241d6afd3c","$87e6acd7396d97dc$export$837ba5c449269406","$87e6acd7396d97dc$export$bcc6e673dfa14d36","$87e6acd7396d97dc$export$ed9bd8dcaeba14f6","$87e6acd7396d97dc$export$dbf961a8d278dbef","$87e6acd7396d97dc$export$aa35ef1f24408ab9","$87e6acd7396d97dc$var$map$1","A","B","C","D","E","F","f","$87e6acd7396d97dc$var$hex","$87e6acd7396d97dc$var$h1","$87e6acd7396d97dc$var$h2","$87e6acd7396d97dc$var$eq","$87e6acd7396d97dc$var$isShort","g","$87e6acd7396d97dc$var$alpha","$87e6acd7396d97dc$var$HUE_RE","$87e6acd7396d97dc$var$hsl2rgbn","$87e6acd7396d97dc$var$hsv2rgbn","$87e6acd7396d97dc$var$hwb2rgbn","rgb","$87e6acd7396d97dc$export$b5ba70b240f8f7f","$87e6acd7396d97dc$var$hueValue","$87e6acd7396d97dc$var$calln","$87e6acd7396d97dc$export$4c15bd42559b811d","$87e6acd7396d97dc$var$hue","$87e6acd7396d97dc$export$5e91288c399be4f9","exec","$87e6acd7396d97dc$export$e2710022c70fc9ee","$87e6acd7396d97dc$export$b785a357c84e4a04","$87e6acd7396d97dc$var$map","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$87e6acd7396d97dc$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$87e6acd7396d97dc$var$names","$87e6acd7396d97dc$export$b2f06b640faad956","unpacked","tkeys","ok","nk","$87e6acd7396d97dc$var$unpack","$87e6acd7396d97dc$var$RGB_RE","$87e6acd7396d97dc$var$to","$87e6acd7396d97dc$var$from","$87e6acd7396d97dc$var$modHSL","$87e6acd7396d97dc$var$clone","$87e6acd7396d97dc$var$fromObject","$87e6acd7396d97dc$var$functionParse","$87e6acd7396d97dc$export$91aedb20f296e541","$87e6acd7396d97dc$export$892596cec99bc70e","_rgb","_valid","rgbString","hslString","$87e6acd7396d97dc$export$a197af1c58e6260c","c2","w2","w1","rgb1","rgb2","$87e6acd7396d97dc$var$interpolate","clearer","greyscale","opaquer","negate","lighten","desaturate","deg","$87e6acd7396d97dc$export$bb628a54ab399bc9"],"version":3,"file":"dashboard.c2249a07.js.map"}